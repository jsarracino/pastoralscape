(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    124409,       2630]
NotebookOptionsPosition[    121388,       2570]
NotebookOutlinePosition[    121781,       2586]
CellTagsIndexPosition[    121738,       2583]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Mu vary", "Section",
 CellChangeTimes->{{3.801276169998255*^9, 
  3.801276171509274*^9}},ExpressionUUID->"3ff8ceb1-184c-4aa6-bf43-\
265a44a79eb1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"SemanticImport", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<mu_0.0_1.0/output.csv\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.801276177117428*^9, 3.801276201240933*^9}, {
   3.801276256766737*^9, 3.801276262857431*^9}, 3.801277059526319*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"fb204700-5c0e-4bc5-b16b-494b581075d3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"causes", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<cbpp\>\"", ",", "\"\<rvf\>\"", ",", "\"\<age\>\"", ",", 
     "\"\<health\>\""}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.801276719707878*^9, 3.801276731446578*^9}, 
   3.801277054661009*^9},
 CellLabel->"In[15]:=",ExpressionUUID->"609e1553-6778-44a6-a1b1-c10e1db60cac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Transpose", "[", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Normal", "[", 
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "\"\<ising_rvf_mu\>\""}], "]"}], "]"}], "]"}],
          ",", "\[IndentingNewLine]", 
         RowBox[{"Normal", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Around", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], "/@", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\"\<d_\>\"", "<>", "#", "<>", "\"\<_mean\>\""}], ",", 
                RowBox[{"\"\<d_\>\"", "<>", "#", "<>", "\"\<_std\>\""}]}], 
               "}"}]}], "]"}], "]"}]}], "]"}]}], "}"}], "]"}], ")"}], "&"}], "/@",
     "causes"}], ",", 
   RowBox[{"IntervalMarkers", "\[Rule]", "\"\<Bands\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "10"}], ",", "900"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", "causes"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Mu]\>\"", ",", "\"\<Deaths\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", "1", ",", "0.05"}], "}"}]}], "]"}], ",", 
      "Automatic"}], "}"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.801276544660125*^9, 3.801276692783228*^9}, {
  3.801276739954769*^9, 3.8012767806406384`*^9}, {3.80127695385456*^9, 
  3.801276997383667*^9}, {3.80127707200226*^9, 3.801277089047637*^9}, {
  3.8012776426003027`*^9, 3.8012776589769793`*^9}, {3.8012777006819277`*^9, 
  3.8012777015378027`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"239b310d-fc30-40d4-881e-81f41c6d54b6"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, 
        GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAIAWIQDQOm287/sZmV6zBrJgistBe7ub+8SyEVyt9pn5MV
6Kn4JsbBxBgEDtv3yf1d93dxCFT+pD1zT9JHvk2BDhDTLthLhaziV7joB1V/
2f6EzO63O3TdHNLTQOCa/YJMI+X2af5Q/Tftj1yOnWbb4uFw9gwI3LG3Ob15
z60IG6h5D+wrxCWWibu7Q9U/tGfYEjT5k+23/RDzH9t3nJM5Z+WucQCi/4l9
g8fWYPW/hlD7ntkn8AYvKBUROAAx74W9wG0/sxwDmHkv7SsYtv5u6dM7ADHv
tX1Jfu3iymBXqHve2DtMnHRhko0L1Lx39vLq77IDPrlC3ffBPqMlXM7HT9sB
Fp5r3W8beXQ2wcOTt6Pr0bx71fDwnL1FtvV4dCU8PKvmvDfWO1sID89lzi8N
y30L4eGZ0vlzVfjOLHh45lyeUVt7JwcenhFc7Vr1F7Pg4blPa9qHsr4MeHhy
nH71sTs6Fx6eiaFqypLm6fDw3DPDPaYyMs8BFp5PlrkI5XjnOsDCk+X93/pK
lUx4eLIlr5nZqVTgAAvPX1GFEk19KfDwTOsX+/OFHebe1/bnN/yXV9mXBA/P
az9Kg6fcSYKHZ+e1a31PhZPg4fnEK+jB7fw0eHiOps/R9DkY0ycAEH9HwA==

         "], {{{}, {}, {}, {}, {}, {}, {
            EdgeForm[], 
            Directive[
             Opacity[0.2], 
             RGBColor[0.368417, 0.506779, 0.709798]], 
            GraphicsGroupBox[{
              
              PolygonBox[{{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
               16, 17, 18, 19, 20, 21, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33,
                32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 
               22}}]}]}, {}, {}, {}}, {{}, {}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.012833333333333334`], 
             AbsoluteThickness[1], 
             RGBColor[0.368417, 0.506779, 0.709798]], 
            
            LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
             17, 18, 19, 20, 21}]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.012833333333333334`], 
             AbsoluteThickness[1], 
             RGBColor[0.368417, 0.506779, 0.709798]], 
            
            LineBox[{22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
             36, 37, 38, 39, 40, 41, 42}]}}}], {{}, {}}}, {{}, 
        GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAIAWIQDQMOl+LeZfWFOMyaCQIr7Q/ISLZMeB0I5e+0f6ST
9uSUSKCDiTEIHLa//in5xx8/f6j8SXsDm2r/dCc/B4hpF+w1M6Is+bf6QdVf
tt/cp7d4524/h/Q0ELhmL/MnufiMkzdU/037WSxc/y58c3A4ewYE7tg/WOIV
8zrYB2reA3upR1Mrnxt6QtU/tDeT+/t8paYv1PzH9gyWW54fldeE6n9iz/v0
o83bNR5Q+57Z+36RuVrJ6ws174W91qpeZRt7L6h5L+3Xd2S+39ngAzXvtf2T
hEynIGUvqHlv7MOaheQeLfCGmvfO/hOjd0rtRjuoeR/sUz7kPXibY+UAC88f
5xO3vXgSCw9Pn0P5dUzJMfDwZHj/qppdNAYenkJ71ebaZ0XCw/PZuc9dHk2R
8PD0M/Re1WMbDg9PoazZq9zWhMDD02alCUdHZCQ8PMMD3y3ka4qDh+epRy8P
P1waBg9PVpHoB8veRcLD8/0ea0eru6Hw8NQ713l8AUcKPDyLQmb//Ds5Ch6e
epWTehzSQuHhKdm4P3bZwxB4eHaFz8kofRkKD8+6u5/5HA6HwsPz7oFO+5jN
ofDwPMDu/ez3/1h4ePraaM+JuRkPD8/R9DmaPgdj+gQAPjFL6A==
         
         "], {{{}, {}, {}, {}, {}, {}, {
            EdgeForm[], 
            Directive[
             Opacity[0.2], 
             RGBColor[0.880722, 0.611041, 0.142051]], 
            GraphicsGroupBox[{
              
              PolygonBox[{{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
               16, 17, 18, 19, 20, 21, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33,
                32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 
               22}}]}]}, {}, {}, {}}, {{}, {}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.012833333333333334`], 
             AbsoluteThickness[1], 
             RGBColor[0.880722, 0.611041, 0.142051]], 
            
            LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
             17, 18, 19, 20, 21}]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.012833333333333334`], 
             AbsoluteThickness[1], 
             RGBColor[0.880722, 0.611041, 0.142051]], 
            
            LineBox[{22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
             36, 37, 38, 39, 40, 41, 42}]}}}], {{}, {}}}, {{}, 
        GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAIAWIQDQMnz5rb6n5scJg1EwRW2rdbli3JlWmE8nfaH1vC
3NHh0uhgYgwCh+3ZjlwW7MmByZ+01+HnuOqV2ugAMe2C/Uedr4XTZ8LUX7Zv
OnpW6u38Rof0NBC4Zt9waL/zsmkw/Tftl8Wt/ZK4oNHh7BkQuGO/xc7dcvYE
mHkP7I2WHJJ5th6m/qF9xdTKJ2snwsx/bD/f+90K8ckw/U/sp83/cIlhE8y+
Z/YmXP8UZi+DmffC/vej5Vvv3YeZ99I+mKNtU/wimHmv7VnlL9jF3IKZ98Z+
Yd726DUXYOa9s+/+r1Cx+ALMvA/25n5vpc1OwfgMDJZHxSaEaTfBw1PZQUpc
UKsJHp77zD9p24Y1wcPz1hG9xkMNTfDwPBDRfGBaWxM8PL1nZ5w9XNQED0+n
oitLtzc3wcNzD+u831tKm+DhmbOsYoVFexM8PL9ZeTY9bm2Ch2cfw8RrVtOb
4OF5rk5uwp49TfDwnBl26bf1gSZ4eF6p+3x73uomeHim/d116syWJnh4ln9R
T/RZ3AQPz2zO+mLbFU3w8Dx6ce/Ly/Oa4OGZqDK98DrcvHf27aysqt+XNcHD
szzQwSpgaxM8PEfT52j6HIzpEwAK+V/g
         "], {{{}, {}, {}, {}, {}, {}, {
            EdgeForm[], 
            Directive[
             Opacity[0.2], 
             RGBColor[0.560181, 0.691569, 0.194885]], 
            GraphicsGroupBox[{
              
              PolygonBox[{{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
               16, 17, 18, 19, 20, 21, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33,
                32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 
               22}}]}]}, {}, {}, {}}, {{}, {}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.012833333333333334`], 
             AbsoluteThickness[1], 
             RGBColor[0.560181, 0.691569, 0.194885]], 
            
            LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
             17, 18, 19, 20, 21}]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.012833333333333334`], 
             AbsoluteThickness[1], 
             RGBColor[0.560181, 0.691569, 0.194885]], 
            
            LineBox[{22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
             36, 37, 38, 39, 40, 41, 42}]}}}], {{}, {}}}}}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQNWpvxF199XOsyaCQIr7X1AAubFUP5O+9nsO1+n
exc4mBiDwGF7uSfr5ut+S4PKn7Rf/szx3a+dqQ4Q0y7Yg4w7b5YIVX/Z3v9s
852vxokO6WkgcM0+4dLKygnRiVD9N+3Xz9cNa1sf53D2DAjcsbdYdGBJcHEC
1LwH9vbRa3juc8RC1T+0D/msUP5XJw5q/mP73zeTUn8ci4bqf2IvMqMkSy4l
GmrfM/sFQOPzj8RDzXthv0+QVW1uVBTUvJf2cSAL5COg5r22B9rWwSQcATXv
jb3a3FnAEAiHmvfOPhDsgXCoeR/stQ+bLzqgEuEAADVrkKQ=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQMygQmXVlpGOsyaCQIr7dvyXRo91cOh/J32H3s1
DF5OCXMwMQaBw/b20Wt47neEQOVP2tdvi5DcFxjiADHtgv1GoxplLp9gqPrL
9iBpQdYgh/Q0ELhmvzT4s0J5bTBU/037SysrJ+yuC3Y4ewYE7tjPncW+83V6
ENS8B/adTJP9zjrD1D+0Z1UDqrAMgpr/2B5oOFAkFKr/iT3IdqvSYKh9z+xX
gYz/Fgg174W9uPZh80UMgVDzXkL8JwIz77X9DzeRGSVZgVDz3tgDQ2P5s4OB
UPPe2cs9WTdf9xrMfR/sjcEWBjsAAAL3ilQ=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQONnsufOfY1OsyaCQIr7a/anIi1Xwzj77R3evfr
ZtLZRgcTYxA4bF/gAtTxDSZ/0v7b5qOnPnxtdICYdsFe7sm6+bpsTVD1l+0f
SQcmXBJsckhPA4FrcHmI/pv2nUyT/c4KNzmcPQMCdyD2czdBzXtgn3BpZeUE
ZZj6h/bKXD5Wpuow8x/bywCNX6kJ0//E3pS/6Pp5PZh9z+zPNt/5ulkXZt4L
+52v07unOsLMe2l/vwPoAFWYea/tU3+4icywgZn3xh4cPnYw895B3GsNM++D
/fXzYtqH7ZscACnElDg=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQjQ5mzQSBlfao/J1wvokxCBxGkz9pj2rKBTT1l+H8
9DQQuIam/yacf/YMCNxBM+8BmvqHaOY/RtP/BM2+Z2jmvUAz7yWaea/RzHuD
Zt47NPM+wPkA+r1Hnw==
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Deaths\"", TraditionalForm], None}, {
        FormBox["\"\[Mu]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{0., 0.05, 0.1, 0.15000000000000002`, 0.2, 0.25, 
       0.30000000000000004`, 0.35000000000000003`, 0.4, 0.45, 0.5, 0.55, 
       0.6000000000000001, 0.65, 0.7000000000000001, 0.75, 0.8, 
       0.8500000000000001, 0.9, 0.9500000000000001, 1.}, Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 1}, {-10, 900}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"cbpp\"", "\"rvf\"", "\"age\"", "\"health\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.801276561771566*^9, 3.801276640810404*^9}, {
   3.801276678528665*^9, 3.8012766874508266`*^9}, {3.8012767708584003`*^9, 
   3.8012767810639133`*^9}, {3.801276991915612*^9, 3.801276997779435*^9}, {
   3.80127708738083*^9, 3.801277089554111*^9}, {3.801277626126171*^9, 
   3.801277659459502*^9}, 3.801277702344792*^9, 3.801277760393422*^9, 
   3.808056254740348*^9, 3.8080991875217657`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"e4d1fb04-10a7-4d87-bc95-362c2c4508f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<mu-errorbars.png\>\""}], ",", "%"}], "]"}]], "Input",
 CellChangeTimes->{{3.801277724234024*^9, 3.801277740832057*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"f65f6b9d-198c-4dbe-ac81-b55f7edd3ef5"],

Cell[BoxData["\<\"/Users/matt/wsu/livestock-agent-model/runs/spring_2020/mu-\
errorbars.png\"\>"], "Output",
 CellChangeTimes->{3.8012777617102633`*^9, 3.808056262572679*^9, 
  3.808099187731407*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"504e7859-7af0-4320-9c72-961923f4ddb7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Normal", "[", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "\"\<ising_rvf_mu\>\""}], "]"}], "]"}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Normal", "[", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", 
            RowBox[{"\"\<d_\>\"", "<>", "#", "<>", "\"\<_mean\>\""}]}], "]"}],
           "]"}], "]"}]}], "}"}], "]"}], "&"}], "/@", "causes"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "700"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", "causes"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Mu]\>\"", ",", "\"\<Deaths\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", "1", ",", "0.05"}], "}"}]}], "]"}], ",", 
      "Automatic"}], "}"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.801276290684321*^9, 3.8012764243522987`*^9}, {
   3.801276794838917*^9, 3.80127681384059*^9}, {3.801277012061956*^9, 
   3.80127704340032*^9}, 3.801277100840933*^9, {3.801277584370212*^9, 
   3.801277611064837*^9}, {3.801277678441934*^9, 3.801277686137792*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"0b1a10c4-0a88-4d54-af51-d1cb3e004634"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQNWpvxF199XOsyaCQIr7X1AAubFUP5O+9nsO1+n
exc4mBiDwGF7uSfr5ut+S4PKn7Rf/szx3a+dqQ4Q0y7Yg4w7b5YIVX/Z3v9s
852vxokO6WkgcM0+4dLKygnRiVD9N+3Xz9cNa1sf53D2DAjcsbdYdGBJcHEC
1LwH9vbRa3juc8RC1T+0D/msUP5XJw5q/mP73zeTUn8ci4bqf2IvMqMkSy4l
GmrfM/sFQOPzj8RDzXthv0+QVW1uVBTUvJf2cSAL5COg5r22B9rWwSQcATXv
jb3a3FnAEAiHmvfOPhDsgXCoeR/stQ+bLzqgEuEAADVrkKQ=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQMygQmXVlpGOsyaCQIr7dvyXRo91cOh/J32H3s1
DF5OCXMwMQaBw/b20Wt47neEQOVP2tdvi5DcFxjiADHtgv1GoxplLp9gqPrL
9iBpQdYgh/Q0ELhmvzT4s0J5bTBU/037SysrJ+yuC3Y4ewYE7tjPncW+83V6
ENS8B/adTJP9zjrD1D+0Z1UDqrAMgpr/2B5oOFAkFKr/iT3IdqvSYKh9z+xX
gYz/Fgg174W9uPZh80UMgVDzXkL8JwIz77X9DzeRGSVZgVDz3tgDQ2P5s4OB
UPPe2cs9WTdf9xrMfR/sjcEWBjsAAAL3ilQ=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQONnsufOfY1OsyaCQIr7a/anIi1Xwzj77R3evfr
ZtLZRgcTYxA4bF/gAtTxDSZ/0v7b5qOnPnxtdICYdsFe7sm6+bpsTVD1l+0f
SQcmXBJsckhPA4FrcHmI/pv2nUyT/c4KNzmcPQMCdyD2czdBzXtgn3BpZeUE
ZZj6h/bKXD5Wpuow8x/bywCNX6kJ0//E3pS/6Pp5PZh9z+zPNt/5ulkXZt4L
+52v07unOsLMe2l/vwPoAFWYea/tU3+4icywgZn3xh4cPnYw895B3GsNM++D
/fXzYtqH7ZscACnElDg=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQjQ5mzQSBlfao/J1wvokxCBxGkz9pj2rKBTT1l+H8
9DQQuIam/yacf/YMCNxBM+8BmvqHaOY/RtP/BM2+Z2jmvUAz7yWaea/RzHuD
Zt47NPM+wPkA+r1Hnw==
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Deaths\"", TraditionalForm], None}, {
        FormBox["\"\[Mu]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{0., 0.05, 0.1, 0.15000000000000002`, 0.2, 0.25, 
       0.30000000000000004`, 0.35000000000000003`, 0.4, 0.45, 0.5, 0.55, 
       0.6000000000000001, 0.65, 0.7000000000000001, 0.75, 0.8, 
       0.8500000000000001, 0.9, 0.9500000000000001, 1.}, Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 1}, {0, 700}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"cbpp\"", "\"rvf\"", "\"age\"", "\"health\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.801276298283249*^9, 3.8012763361556*^9}, {
   3.8012763822467747`*^9, 3.80127641272818*^9}, {3.801276806064981*^9, 
   3.801276814175021*^9}, 3.801277035516193*^9, 3.801277102357703*^9, {
   3.801277597789651*^9, 3.801277626656336*^9}, 3.801277686826881*^9, 
   3.801277762275264*^9, 3.8080562641070957`*^9, 3.8080991877982483`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"8566d149-34eb-4ef7-a20a-eb1e5ef8c09c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<mu-noerror.png\>\""}],
    ",", "%"}], "]"}]], "Input",
 CellChangeTimes->{{3.8012777443413486`*^9, 3.8012777549623823`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"5cb9f418-6d31-4128-9dba-21aad985713b"],

Cell[BoxData["\<\"/Users/matt/wsu/livestock-agent-model/runs/spring_2020/mu-\
noerror.png\"\>"], "Output",
 CellChangeTimes->{3.8012777643820066`*^9, 3.808056266607375*^9, 
  3.8080991879596043`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"3040cacc-cb13-4d31-8a07-75856594052d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Date vary", "Section",
 CellChangeTimes->{{3.801276172723287*^9, 
  3.80127617486578*^9}},ExpressionUUID->"e63fe169-93cc-4b3d-aea8-\
a4612d65cb39"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"SemanticImport", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<vacc_date_newcbpp/output.csv\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.801276177117428*^9, 3.801276201240933*^9}, {
   3.801276256766737*^9, 3.801276262857431*^9}, 3.801277059526319*^9, {
   3.801277140485873*^9, 3.801277143837057*^9}, {3.808056279492331*^9, 
   3.808056281428536*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"feffe08d-cc1a-4dab-b0bf-54f17e9b124b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"causes", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<cbpp\>\"", ",", "\"\<rvf\>\"", ",", "\"\<age\>\"", ",", 
     "\"\<health\>\""}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.801276719707878*^9, 3.801276731446578*^9}, 
   3.801277054661009*^9},
 CellLabel->"In[21]:=",ExpressionUUID->"719ce546-f459-44ad-a08c-4ae4edefb994"],

Cell[BoxData[
 RowBox[{
  RowBox[{"causes", "=", 
   RowBox[{"{", 
    RowBox[{"\"\<cbpp\>\"", ",", "\"\<rvf\>\""}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.801276719707878*^9, 3.801276731446578*^9}, 
   3.801277054661009*^9, 3.808100275416628*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"579124ef-7010-49d3-96b6-6bee582fe3b2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Transpose", "[", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{"i", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "12"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Normal", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Around", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], "/@", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\"\<d_\>\"", "<>", "#", "<>", "\"\<_mean\>\""}], ",", 
                RowBox[{"\"\<d_\>\"", "<>", "#", "<>", "\"\<_std\>\""}]}], 
               "}"}]}], "]"}], "]"}]}], "]"}]}], "}"}], "]"}], ")"}], "&"}], "/@",
     "causes"}], ",", 
   RowBox[{"IntervalMarkers", "\[Rule]", "\"\<Bands\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "12"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "10"}], ",", "300"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", "causes"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Vaccination Month\>\"", ",", "\"\<Deaths\>\""}], "}"}]}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "12"}], "}"}]}], "]"}], ",", 
      "Automatic"}], "}"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.801276544660125*^9, 3.801276692783228*^9}, {
  3.801276739954769*^9, 3.8012767806406384`*^9}, {3.80127695385456*^9, 
  3.801276997383667*^9}, {3.80127707200226*^9, 3.801277089047637*^9}, {
  3.801277153056202*^9, 3.8012771569713173`*^9}, {3.801277190201144*^9, 
  3.80127720327238*^9}, {3.801277326865162*^9, 3.8012773674177113`*^9}, {
  3.801277539422806*^9, 3.801277543603712*^9}, {3.808100285959436*^9, 
  3.808100286393548*^9}, {3.808100644128166*^9, 3.808100644350977*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"29ac7f40-22f8-4e82-a511-c77d4cdabd40"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, 
        GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwAGIQDQEf7K/wNaev+23gABVwEGi+tkUr3QTK53AosX6q
e3eNB5Qv4GDS6bB7t7snlC/isGPKL4+LsTB5CQeNPmaz1rOGUL6MA0PBKaEJ
0uYHIHwFh/2Ldj8pqnWDyis5nD/1eKLWTZh5Kg48f3LrPmnD5NUcDrhpPgzn
94PyNRyWNFpt3/ARZt8H+x/unYdd52fB3e/CdNHCZmcB3P1357yzjyuDyQs4
zHfdvezTSRhfxIFho7vshZWZcPff1HAXstbLh7uf2ar6nE1fkQPM/evCdD6v
358Md/+xuU63spPS4O4/O71f2To8A+7+K12rd79ng/E1HHQdfZW/hMLsHw3/
gQp/ADeOxBQ=
         "], {{{}, {}, {}, {}, {}, {}, {
            EdgeForm[], 
            Directive[
             Opacity[0.2], 
             RGBColor[0.368417, 0.506779, 0.709798]], 
            GraphicsGroupBox[{
              
              PolygonBox[{{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 23, 22, 
               21, 20, 19, 18, 17, 16, 15, 14, 
               13}}]}]}, {}, {}, {}}, {{}, {}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.012833333333333334`], 
             AbsoluteThickness[1], 
             RGBColor[0.368417, 0.506779, 0.709798]], 
            LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.012833333333333334`], 
             AbsoluteThickness[1], 
             RGBColor[0.368417, 0.506779, 0.709798]], 
            
            LineBox[{13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 
             24}]}}}], {{}, {}}}, {{}, 
        GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwAGIQDQEf7OdwRKX4mfk5QAUcXiu+W98xNQDK53Cw/qYj
p/PAH8oXcJhx4+0c4zM+UL6Ig0sd+5q1PI5QvoTD0Qhx7jIjmHoZh4Bw6eP/
pnlD+QoOx0953z40wRPKV3I49elwbbWBO5Sv4uC3wernHwOY+WoOf/Jm713J
6gblazg8sIrTFDkOM/+DfcWxw9GMU8Pg7u+9Xce46lko3P2Hed80W8TC5AUc
HmXyL9SSjoS7/6bdI+cSrQS4+6MuaQXfWwLTL+PQl/ykOOA0TL+CA98nzZUn
q8Lh7t9o+LAiZUU03P2iBQcO3ZkMU6/mcCLm1NSp0vFw9/PNXMlisg7GHw3/
gQp/ANdpwjY=
         "], {{{}, {}, {}, {}, {}, {}, {
            EdgeForm[], 
            Directive[
             Opacity[0.2], 
             RGBColor[0.880722, 0.611041, 0.142051]], 
            GraphicsGroupBox[{
              
              PolygonBox[{{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 23, 22, 
               21, 20, 19, 18, 17, 16, 15, 14, 
               13}}]}]}, {}, {}, {}}, {{}, {}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.012833333333333334`], 
             AbsoluteThickness[1], 
             RGBColor[0.880722, 0.611041, 0.142051]], 
            LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.012833333333333334`], 
             AbsoluteThickness[1], 
             RGBColor[0.880722, 0.611041, 0.142051]], 
            
            LineBox[{13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 
             24}]}}}], {{}, {}}}}}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., 114.98019801980197`}, {2., 143.990099009901}, {3., 
         130.52475247524754`}, {4., 132.43564356435644`}, {5., 
         127.01980198019803`}, {6., 133.62376237623764`}, {7., 
         136.8910891089109}, {8., 101.48514851485149`}, {9., 
         115.38613861386139`}, {10., 119.53465346534654`}, {11., 
         126.16831683168317`}, {12., 130.2871287128713}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., 75.37623762376238}, {2., 76.97029702970298}, {3., 
         76.60396039603961}, {4., 79.00990099009901}, {5., 
         81.7128712871287}, {6., 74.48514851485149}, {7., 
         73.17821782178218}, {8., 72.52475247524752}, {9., 
         78.5049504950495}, {10., 73.34653465346534}, {11., 
         84.23762376237623}, {12., 95.13861386138613}}]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {1., 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Deaths\"", TraditionalForm], None}, {
        FormBox["\"Vaccination Month\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}, Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotRange -> {{1, 12}, {-10, 300}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"cbpp\"", "\"rvf\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.801276561771566*^9, 3.801276640810404*^9}, {
   3.801276678528665*^9, 3.8012766874508266`*^9}, {3.8012767708584003`*^9, 
   3.8012767810639133`*^9}, {3.801276991915612*^9, 3.801276997779435*^9}, {
   3.80127708738083*^9, 3.801277089554111*^9}, 3.8012771581567583`*^9, 
   3.801277191025334*^9, 3.8012772325190973`*^9, {3.801277328454171*^9, 
   3.801277367849916*^9}, 3.801277544747232*^9, 3.801277786954444*^9, 
   3.808056284341742*^9, 3.808099188225379*^9, {3.8081002777188473`*^9, 
   3.80810028709949*^9}, 3.80810064482515*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"2fdaa72a-4833-475e-8f1f-836873017b91"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<vaccdate-errorbars.png\>\""}], ",", "%"}], "]"}]], "Input",
 CellChangeTimes->{{3.801277781918343*^9, 3.801277783332356*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"59d7bd7a-390b-4413-9a46-5d412fb83391"],

Cell[BoxData["\<\"/Users/matt/wsu/livestock-agent-model/runs/spring_2020/\
vaccdate-errorbars.png\"\>"], "Output",
 CellChangeTimes->{3.801277788021048*^9, 3.808056288098537*^9, 
  3.808099188389613*^9, 3.808100294987871*^9, 3.8081006655532293`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"4b2dd265-a799-4867-836d-ea29d55d26f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "12"}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Normal", "[", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", 
            RowBox[{"\"\<d_\>\"", "<>", "#", "<>", "\"\<_mean\>\""}]}], "]"}],
           "]"}], "]"}]}], "}"}], "]"}], "&"}], "/@", "causes"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "12"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "10"}], ",", "200"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", "causes"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Vaccination Month\>\"", ",", "\"\<Deaths\>\""}], "}"}]}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "12"}], "}"}]}], "]"}], ",", 
      "Automatic"}], "}"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.801276290684321*^9, 3.8012764243522987`*^9}, {
   3.801276794838917*^9, 3.80127681384059*^9}, {3.801277012061956*^9, 
   3.80127704340032*^9}, 3.801277100840933*^9, 3.801277182602124*^9, 
   3.801277250405889*^9, 3.801277388571445*^9, {3.801277487191662*^9, 
   3.801277533771101*^9}, {3.808100291843424*^9, 3.8081002922345657`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"6fef9a1d-f1c2-4f01-b1fc-41f38e71e74b"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., 114.98019801980197`}, {2., 143.990099009901}, {3., 
         130.52475247524754`}, {4., 132.43564356435644`}, {5., 
         127.01980198019803`}, {6., 133.62376237623764`}, {7., 
         136.8910891089109}, {8., 101.48514851485149`}, {9., 
         115.38613861386139`}, {10., 119.53465346534654`}, {11., 
         126.16831683168317`}, {12., 130.2871287128713}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., 75.37623762376238}, {2., 76.97029702970298}, {3., 
         76.60396039603961}, {4., 79.00990099009901}, {5., 
         81.7128712871287}, {6., 74.48514851485149}, {7., 
         73.17821782178218}, {8., 72.52475247524752}, {9., 
         78.5049504950495}, {10., 73.34653465346534}, {11., 
         84.23762376237623}, {12., 95.13861386138613}}]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {1., 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Deaths\"", TraditionalForm], None}, {
        FormBox["\"Vaccination Month\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}, Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotRange -> {{1, 12}, {-10, 200}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"cbpp\"", "\"rvf\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.801276298283249*^9, 3.8012763361556*^9}, {
   3.8012763822467747`*^9, 3.80127641272818*^9}, {3.801276806064981*^9, 
   3.801276814175021*^9}, 3.801277035516193*^9, 3.801277102357703*^9, 
   3.80127718341722*^9, 3.801277250966337*^9, 3.801277389948036*^9, {
   3.801277491215581*^9, 3.801277529965419*^9}, 3.801277788939292*^9, 
   3.80805628919698*^9, 3.8080991884578342`*^9, 3.808100295636169*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"4670cc7e-9535-4409-8f5c-7512c48afcc7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<vaccdate-noerror.png\>\""}], ",", "%"}], "]"}]], "Input",
 CellChangeTimes->{{3.801277793087988*^9, 3.801277797276455*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"2030776d-5167-483f-8c10-7813ca3e1be3"],

Cell[BoxData["\<\"/Users/matt/wsu/livestock-agent-model/runs/spring_2020/\
vaccdate-noerror.png\"\>"], "Output",
 CellChangeTimes->{3.801277801636478*^9, 3.808056299560338*^9, 
  3.808099188653901*^9, 3.808100454843471*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"059cd4e2-9ce6-4408-9576-a96250cd44a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "\"\<d_rvf_mean\>\""}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8081004797534733`*^9, 3.808100520052431*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"56141178-fd5d-4859-9c2b-2f005ecf94e2"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> {75.37623762376238, 76.97029702970298, 76.60396039603961,
       79.00990099009901, 81.7128712871287, 74.48514851485149, 
      73.17821782178218, 72.52475247524752, 78.5049504950495, 
      73.34653465346534, 84.23762376237623, 95.13861386138613}, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MulticolumnShape[2, 6, 12, 60], 12, 6, {All}], 
     "InitialType" -> TypeSystem`Vector[
       TypeSystem`Atom[Real], 12], "Meta" -> 
     Association["ID" -> 28647642416441], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MulticolumnShape[2, 6, 12, 60], 12, 6, {All}], 
     "Type" -> TypeSystem`Vector[
       TypeSystem`Atom[Real], 12], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 2, "DisplayedColumnCount" -> 6, "DataRowCount" -> 
     2, "DataColumnCount" -> 6, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes["75.3762"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "07ea744b-f3ee-4247-92ff-591f66882145"][{1}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["76.9703"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "07ea744b-f3ee-4247-92ff-591f66882145"][{2}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["76.604"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "07ea744b-f3ee-4247-92ff-591f66882145"][{3}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["79.0099"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "07ea744b-f3ee-4247-92ff-591f66882145"][{4}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["81.7129"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "07ea744b-f3ee-4247-92ff-591f66882145"][{5}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["74.4851"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "07ea744b-f3ee-4247-92ff-591f66882145"][{6}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["73.1782"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "07ea744b-f3ee-4247-92ff-591f66882145"][{7}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["72.5248"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "07ea744b-f3ee-4247-92ff-591f66882145"][{8}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["78.505"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "07ea744b-f3ee-4247-92ff-591f66882145"][{9}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["73.3465"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "07ea744b-f3ee-4247-92ff-591f66882145"][{10}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["84.2376"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "07ea744b-f3ee-4247-92ff-591f66882145"][{11}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["95.1386"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "07ea744b-f3ee-4247-92ff-591f66882145"][{12}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "remove"]]
                    , MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{429., {40.634033203125, 46.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{429., {40.634033203125, 46.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.808100487832728*^9, 3.80810052109553*^9}},
 CellLabel->"Out[11]=",ExpressionUUID->"ffd7cfa2-5cdc-4d11-a918-d37864baa553"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{824, 1013},
WindowMargins->{{19, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"c223da27-c15a-49b8-b472-0b860a5b0a7f"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 152, 3, 67, "Section",ExpressionUUID->"3ff8ceb1-184c-4aa6-bf43-265a44a79eb1"],
Cell[735, 27, 431, 9, 30, "Input",ExpressionUUID->"fb204700-5c0e-4bc5-b16b-494b581075d3"],
Cell[1169, 38, 367, 9, 30, "Input",ExpressionUUID->"609e1553-6778-44a6-a1b1-c10e1db60cac"],
Cell[CellGroupData[{
Cell[1561, 51, 2497, 62, 262, "Input",ExpressionUUID->"239b310d-fc30-40d4-881e-81f41c6d54b6"],
Cell[4061, 115, 27207, 564, 249, "Output",ExpressionUUID->"e4d1fb04-10a7-4d87-bc95-362c2c4508f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31305, 684, 321, 7, 30, "Input",ExpressionUUID->"f65f6b9d-198c-4dbe-ac81-b55f7edd3ef5"],
Cell[31629, 693, 278, 4, 34, "Output",ExpressionUUID->"504e7859-7af0-4320-9c72-961923f4ddb7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31944, 702, 1958, 47, 241, "Input",ExpressionUUID->"0b1a10c4-0a88-4d54-af51-d1cb3e004634"],
Cell[33905, 751, 21308, 436, 255, "Output",ExpressionUUID->"8566d149-34eb-4ef7-a20a-eb1e5ef8c09c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55250, 1192, 322, 7, 30, "Input",ExpressionUUID->"5cb9f418-6d31-4128-9dba-21aad985713b"],
Cell[55575, 1201, 278, 4, 34, "Output",ExpressionUUID->"3040cacc-cb13-4d31-8a07-75856594052d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[55902, 1211, 153, 3, 67, "Section",ExpressionUUID->"e63fe169-93cc-4b3d-aea8-a4612d65cb39"],
Cell[56058, 1216, 537, 11, 30, "Input",ExpressionUUID->"feffe08d-cc1a-4dab-b0bf-54f17e9b124b"],
Cell[56598, 1229, 367, 9, 30, "Input",ExpressionUUID->"719ce546-f459-44ad-a08c-4ae4edefb994"],
Cell[56968, 1240, 334, 7, 30, "Input",ExpressionUUID->"579124ef-7010-49d3-96b6-6bee582fe3b2"],
Cell[CellGroupData[{
Cell[57327, 1251, 2664, 64, 262, "Input",ExpressionUUID->"29ac7f40-22f8-4e82-a511-c77d4cdabd40"],
Cell[59994, 1317, 15875, 331, 256, "Output",ExpressionUUID->"2fdaa72a-4833-475e-8f1f-836873017b91"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75906, 1653, 327, 7, 30, "Input",ExpressionUUID->"59d7bd7a-390b-4413-9a46-5d412fb83391"],
Cell[76236, 1662, 328, 4, 82, "Output",ExpressionUUID->"4b2dd265-a799-4867-836d-ea29d55d26f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76601, 1671, 2036, 49, 241, "Input",ExpressionUUID->"6fef9a1d-f1c2-4f01-b1fc-41f38e71e74b"],
Cell[78640, 1722, 12816, 261, 256, "Output",ExpressionUUID->"4670cc7e-9535-4409-8f5c-7512c48afcc7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91493, 1988, 324, 7, 30, "Input",ExpressionUUID->"2030776d-5167-483f-8c10-7813ca3e1be3"],
Cell[91820, 1997, 301, 4, 34, "Output",ExpressionUUID->"059cd4e2-9ce6-4408-9576-a96250cd44a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92158, 2006, 270, 5, 30, "Input",ExpressionUUID->"56141178-fd5d-4859-9c2b-2f005ecf94e2"],
Cell[92431, 2013, 28929, 553, 107, "Output",ExpressionUUID->"ffd7cfa2-5cdc-4d11-a918-d37864baa553"]
}, Open  ]]
}, Open  ]]
}
]
*)

